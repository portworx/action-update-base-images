name: 'Update Base Images'
description: 'Updates versions of the base images in all buildah.sh files in the repository. Afterwards it makes commit and push in specified branch.'

inputs:
  branch:
    description: 'The branch of the repository to checkout.'
    required: true
  to-version:
    description: 'Version of the new base images as short sha.'
    required: true
  image-repo:
    description: 'Type of the base image: pds-base/pds-base-config/pds-jdk/pds-jemalloc'
    required: true
  filename:
    description: 'The name of buildah file to look for.'
    required: false
    default: "buildah.sh"
  filenameRegex:
    description: 'The name of buildah file(s) to look for. If this argument is set then it overrides the "filename" input.'
    required: false
    default: ""

outputs:
  old-version:
    description: 'The old base image versions.'
    value: ${{ steps.current-version.outputs.versions }}

runs:
  using: "composite"
  steps:
  - name: Checkout temporary branch
    uses: actions/checkout@v3
    with:
      ref: ${{ inputs.branch }}

  - name: Get current version
    shell: bash
    id: current-version
    run: |
      # Find current version hashes in any buildah.sh file:
      if [ -n "${{ inputs.filenameRegex }})" ]; then 
        BUILDAH_FILES=$(find . -regex '${{ inputs.filenameRegex }}')
      else
        BUILDAH_FILES=$(find . -name '${{ inputs.filename }}')
      fi
      for file in $BUILDAH_FILES
      do
        VERSION=$(cat $file | grep -Po '(?<=from_image="docker\.io\/portworx\/${{ inputs.image-repo }}:).*[0-9a-f]{7}' | grep -Po "[0-9a-f]{7}")
        if [ -n $VERSION ]
        then
          if [[ $VERSIONS != *"$VERSION"* ]]; then
            VERSIONS="$VERSIONS $VERSION"
          fi
        fi
      done
      # Trim spaces.
      VERSIONS=$(echo $VERSIONS | xargs)
      echo "::set-output name=versions::${VERSIONS}"

  - name: Find and Replace
    id: replace
    shell: bash
    run: |
      REPLACE=${{ inputs.to-version }}
      # Convert versions string to array.
      VERSIONS=("${{ steps.current-version.outputs.versions }}")
      if [ -n "${{ inputs.filenameRegex }})" ]; then 
        BUILDAH_FILES=$(find . -regex '${{ inputs.filenameRegex }}')
      else
        BUILDAH_FILES=$(find . -name '${{ inputs.filename }}')
      fi

      # Replace current versions with the new one for each file.
      for file in $BUILDAH_FILES
      do
        for current_version in $VERSIONS
        do
          sed -i "s/$current_version/$REPLACE/g" $file
        done
      done

  - name: Commit and Push
    uses: EndBug/add-and-commit@v7
    with:
      message: |
        Update `${{ inputs.image-repo }}` from `${{ steps.current-version.outputs.versions }}` to `${{ inputs.to-version }}`
      branch: ${{ inputs.branch }}
      default_author: github_actions